import io
import requests
from fpdf import FPDF
from PIL import Image

def generate_pdf_report(sd, psd, perf_circles, top_content_data, cur, delta, total, delta2, clicks, delta3, new_users, delta_new, returning_users, delta_returning, country_data, traf_df, sc_df, format_month_year):
    pdf = FPDF()
    pdf.add_page()
    logo_url = "https://www.salasarservices.com/assets/Frontend/images/logo-black.png"
    try:
        logo_bytes = requests.get(logo_url, timeout=5).content
        logo_img = Image.open(io.BytesIO(logo_bytes)).convert("RGBA")
        logo_path = "logo_temp.png"
        logo_img.save(logo_path)
        pdf.image(logo_path, x=10, y=8, w=50)
    except Exception:
        pass

    pdf.set_xy(65, 15)
    pdf.set_font("Arial", 'B', 17)
    pdf.set_text_color(45, 68, 141)
    pdf.cell(0, 12, "Salasar Services Digital Marketing Reporting Dashboard", ln=1)

    pdf.set_font("Arial", '', 12)
    pdf.set_text_color(0,0,0)
    pdf.ln(8)
    pdf.cell(0, 10, f"Reporting Period: {format_month_year(sd)} | Previous: {format_month_year(psd)}", ln=1)

    pdf.set_font("Arial", 'B', 14)
    pdf.set_text_color(45, 68, 141)
    pdf.cell(0, 12, "Website Performance", ln=1)
    pdf.set_font("Arial", '', 12)
    pdf.set_text_color(0,0,0)
    for metric in perf_circles:
        val = f"{metric['value']:.2f}" if metric["title"]=="Average CTR" else str(metric['value'])
        pdf.cell(0, 10, f"{metric['title']}: {val} ({metric['delta']:+.2f} % from previous month)", ln=1)
    pdf.ln(2)

    pdf.set_font("Arial", 'B', 14)
    pdf.set_text_color(45, 68, 141)
    pdf.cell(0, 10, "Top Content", ln=1)
    pdf.set_font("Arial", 'B', 12)
    pdf.cell(110, 8, "Page", border=1)
    pdf.cell(30, 8, "Clicks", border=1)
    pdf.cell(35, 8, "Change (%)", border=1, ln=1)
    pdf.set_font("Arial", '', 12)
    for row in top_content_data:
        pdf.cell(110, 8, row['Page'][:65], border=1)
        pdf.cell(30, 8, str(row['Clicks']), border=1)
        pdf.cell(35, 8, row['Change (%)'], border=1, ln=1)
    pdf.ln(4)

    pdf.set_font("Arial", 'B', 14)
    pdf.set_text_color(45, 68, 141)
    pdf.cell(0, 10, "Website Analytics", ln=1)
    pdf.set_font("Arial", '', 12)
    pdf.cell(60, 8, f"Total Users: {cur} ({delta:+.2f}%)", ln=1)
    pdf.cell(60, 8, f"Sessions: {total} ({delta2:+.2f}%)", ln=1)
    pdf.cell(60, 8, f"Organic Clicks: {clicks} ({delta3:+.2f}%)", ln=1)
    pdf.ln(1)

    # New vs Returning Users for PDF
    pdf.set_font("Arial", 'B', 12)
    pdf.cell(0, 9, "New vs Returning Users", ln=1)
    pdf.set_font("Arial", '', 12)
    pdf.cell(60, 8, f"New Users: {new_users} ({delta_new:+.2f}%)", ln=1)
    pdf.cell(60, 8, f"Returning Users: {returning_users} ({delta_returning:+.2f}%)", ln=1)
    pdf.ln(1)

    pdf.set_font("Arial", 'B', 12)
    pdf.cell(0, 9, "Active Users by Country (Top 5)", ln=1)
    pdf.set_font("Arial", '', 12)
    for c in country_data:
        pdf.cell(0, 7, f"{c['country']}: {c['activeUsers']}", ln=1)
    pdf.ln(1)

    pdf.set_font("Arial", 'B', 12)
    pdf.cell(0, 9, "Traffic Acquisition by Channel", ln=1)
    pdf.set_font("Arial", '', 12)
    for idx,row in traf_df.iterrows():
        pdf.cell(0, 7, f"{row['channel']}: {row['sessions']}", ln=1)
    pdf.ln(1)

    pdf.set_font("Arial", 'B', 12)
    pdf.cell(0, 9, "Top 10 Organic Queries", ln=1)
    pdf.set_font("Arial", '', 12)
    for idx,row in sc_df.iterrows():
        pdf.cell(0, 7, f"{row['query']} ({row['clicks']} clicks)", ln=1)
    pdf.ln(2)

    pdf.set_y(-25)
    pdf.set_font("Arial", 'I', 8)
    pdf.set_text_color(150,150,150)
    pdf.cell(0, 10, "Generated by Salasar Services Digital Marketing Reporting Dashboard", 0, 0, 'C')
    pdf_bytes = pdf.output(dest='S').encode('latin1')
    return io.BytesIO(pdf_bytes)
